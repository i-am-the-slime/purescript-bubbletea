// Code generated by psgo. DO NOT EDIT.

package Control_Biapplicative

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Data.Tuple"
	"project.localhost/purescript-native/output/Control.Biapply"
)

type _ = Any

func ꞋBiapplicative_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}
func Ꞌbipure() Any {
    return func(dict Any) Any {
        return dict.(Dict)["bipure"]
    }
}

var ᛌbiapplicativeTuple_once Once
var ᛧbiapplicativeTuple Any

func ꞋbiapplicativeTuple() Any {
    ᛌbiapplicativeTuple_once.Do(func() {
        ᛧbiapplicativeTuple = Dict{"bipure": Data_Tuple.ꞋTuple(), "Biapply0": func(_ Any) Any {
            return Control_Biapply.ꞋbiapplyTuple()
        },}
    })
return ᛧbiapplicativeTuple
}





