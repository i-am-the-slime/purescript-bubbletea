// Code generated by psgo. DO NOT EDIT.

package Data_Monoid_Generic

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Data.Generic.Rep"
	"project.localhost/purescript-native/output/Data.Monoid"
)

type _ = Any

func ꞋGenericMonoid_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}

var ᛌgenericMonoidNoArguments_once Once
var ᛧgenericMonoidNoArguments Any

func ꞋgenericMonoidNoArguments() Any {
    ᛌgenericMonoidNoArguments_once.Do(func() {
        ᛧgenericMonoidNoArguments = Dict{"genericMempty'": Data_Generic_Rep.ꞋNoArguments(),}
    })
return ᛧgenericMonoidNoArguments
}


func ꞋgenericMonoidArgument() Any {
    return func(dictMonoid Any) Any {
        return Dict{"genericMempty'": Apply(Data_Monoid.Ꞌmempty(), dictMonoid),}
    }
}
func ꞋgenericMemptyꞌ() Any {
    return func(dict Any) Any {
        return dict.(Dict)["genericMempty'"]
    }
}
func ꞋgenericMonoidConstructor() Any {
    return func(dictGenericMonoid Any) Any {
        return Dict{"genericMempty'": Apply(ꞋgenericMemptyꞌ(), dictGenericMonoid),}
    }
}
func ꞋgenericMonoidProduct() Any {
    return func(dictGenericMonoid Any) Any {
        var genericMemptyꞌ1 Any = Apply(ꞋgenericMemptyꞌ(), dictGenericMonoid)
        return func(dictGenericMonoid1 Any) Any {
            return Dict{"genericMempty'": Apply(Data_Generic_Rep.ꞋProduct(), genericMemptyꞌ1, Apply(ꞋgenericMemptyꞌ(), dictGenericMonoid1)),}
        }
    }
}
func ꞋgenericMempty() Any {
    return func(dictGeneric Any) Any {
        var to Any = Apply(Data_Generic_Rep.Ꞌto(), dictGeneric)
        return func(dictGenericMonoid Any) Any {
            return Apply(to, Apply(ꞋgenericMemptyꞌ(), dictGenericMonoid))
        }
    }
}



