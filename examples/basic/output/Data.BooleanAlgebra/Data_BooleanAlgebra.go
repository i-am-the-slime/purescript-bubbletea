// Code generated by psgo. DO NOT EDIT.

package Data_BooleanAlgebra

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Data.HeytingAlgebra"
)

type _ = Any

func ꞋheytingAlgebraRecord() Any {
    return Apply(Data_HeytingAlgebra.ꞋheytingAlgebraRecord(), Undefined)
}
func ꞋBooleanAlgebraRecord_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}
func ꞋBooleanAlgebra_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}

var ᛌbooleanAlgebraUnit_once Once
var ᛧbooleanAlgebraUnit Any

func ꞋbooleanAlgebraUnit() Any {
    ᛌbooleanAlgebraUnit_once.Do(func() {
        ᛧbooleanAlgebraUnit = Dict{"HeytingAlgebra0": func(_ Any) Any {
            return Data_HeytingAlgebra.ꞋheytingAlgebraUnit()
        },}
    })
return ᛧbooleanAlgebraUnit
}



var ᛌbooleanAlgebraRecordNil_once Once
var ᛧbooleanAlgebraRecordNil Any

func ꞋbooleanAlgebraRecordNil() Any {
    ᛌbooleanAlgebraRecordNil_once.Do(func() {
        ᛧbooleanAlgebraRecordNil = Dict{"HeytingAlgebraRecord0": func(_ Any) Any {
            return Data_HeytingAlgebra.ꞋheytingAlgebraRecordNil()
        },}
    })
return ᛧbooleanAlgebraRecordNil
}


func ꞋbooleanAlgebraRecordCons() Any {
    return func(dictIsSymbol Any) Any {
        var heytingAlgebraRecordCons Any = Apply(Data_HeytingAlgebra.ꞋheytingAlgebraRecordCons(), dictIsSymbol, Undefined)
        return func(_ Any) Any {
            return func(dictBooleanAlgebraRecord Any) Any {
                var heytingAlgebraRecordCons1 Any = Apply(heytingAlgebraRecordCons, Apply(dictBooleanAlgebraRecord.(Dict)["HeytingAlgebraRecord0"], Undefined))
                return func(dictBooleanAlgebra Any) Any {
                    var heytingAlgebraRecordCons2 Any = Apply(heytingAlgebraRecordCons1, Apply(dictBooleanAlgebra.(Dict)["HeytingAlgebra0"], Undefined))
                    return Dict{"HeytingAlgebraRecord0": func(_ Any) Any {
                            return heytingAlgebraRecordCons2
                        },}
                }
            }
        }
    }
}
func ꞋbooleanAlgebraRecord() Any {
    return func(_ Any) Any {
        return func(dictBooleanAlgebraRecord Any) Any {
            var heytingAlgebraRecord1 Any = Apply(ꞋheytingAlgebraRecord(), Apply(dictBooleanAlgebraRecord.(Dict)["HeytingAlgebraRecord0"], Undefined))
            return Dict{"HeytingAlgebra0": func(_ Any) Any {
                    return heytingAlgebraRecord1
                },}
        }
    }
}

var ᛌbooleanAlgebraProxy_once Once
var ᛧbooleanAlgebraProxy Any

func ꞋbooleanAlgebraProxy() Any {
    ᛌbooleanAlgebraProxy_once.Do(func() {
        ᛧbooleanAlgebraProxy = Dict{"HeytingAlgebra0": func(_ Any) Any {
            return Data_HeytingAlgebra.ꞋheytingAlgebraProxy()
        },}
    })
return ᛧbooleanAlgebraProxy
}


func ꞋbooleanAlgebraFn() Any {
    return func(dictBooleanAlgebra Any) Any {
        var heytingAlgebraFunction Any = Apply(Data_HeytingAlgebra.ꞋheytingAlgebraFunction(), Apply(dictBooleanAlgebra.(Dict)["HeytingAlgebra0"], Undefined))
        return Dict{"HeytingAlgebra0": func(_ Any) Any {
                return heytingAlgebraFunction
            },}
    }
}

var ᛌbooleanAlgebraBoolean_once Once
var ᛧbooleanAlgebraBoolean Any

func ꞋbooleanAlgebraBoolean() Any {
    ᛌbooleanAlgebraBoolean_once.Do(func() {
        ᛧbooleanAlgebraBoolean = Dict{"HeytingAlgebra0": func(_ Any) Any {
            return Data_HeytingAlgebra.ꞋheytingAlgebraBoolean()
        },}
    })
return ᛧbooleanAlgebraBoolean
}





