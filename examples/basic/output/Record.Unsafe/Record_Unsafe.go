// Code generated by psgo. DO NOT EDIT.

package Record_Unsafe

import . "github.com/purescript-native/go-runtime"

import (
)

type _ = Any




// Foreign values

var foreign = Foreign("Record.Unsafe")

var ᛌunsafeHas_once Once
var ᛧunsafeHas Any

func ꞋunsafeHas() Any { 
    ᛌunsafeHas_once.Do(func() {
        ᛧunsafeHas = Get(foreign, "unsafeHas")
    })
    return ᛧunsafeHas
}

var ᛌunsafeGet_once Once
var ᛧunsafeGet Any

func ꞋunsafeGet() Any { 
    ᛌunsafeGet_once.Do(func() {
        ᛧunsafeGet = Get(foreign, "unsafeGet")
    })
    return ᛧunsafeGet
}

var ᛌunsafeSet_once Once
var ᛧunsafeSet Any

func ꞋunsafeSet() Any { 
    ᛌunsafeSet_once.Do(func() {
        ᛧunsafeSet = Get(foreign, "unsafeSet")
    })
    return ᛧunsafeSet
}

var ᛌunsafeDelete_once Once
var ᛧunsafeDelete Any

func ꞋunsafeDelete() Any { 
    ᛌunsafeDelete_once.Do(func() {
        ᛧunsafeDelete = Get(foreign, "unsafeDelete")
    })
    return ᛧunsafeDelete
}


