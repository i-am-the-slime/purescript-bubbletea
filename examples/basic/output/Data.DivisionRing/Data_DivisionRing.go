// Code generated by psgo. DO NOT EDIT.

package Data_DivisionRing

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Data.EuclideanRing"
	"project.localhost/purescript-native/output/Data.Semiring"
	"project.localhost/purescript-native/output/Data.Ring"
)

type _ = Any

func Ꞌdiv() Any {
    return Apply(Data_EuclideanRing.Ꞌdiv(), Data_EuclideanRing.ꞋeuclideanRingNumber())
}
func ꞋDivisionRing_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}
func Ꞌrecip() Any {
    return func(dict Any) Any {
        return dict.(Dict)["recip"]
    }
}
func ꞋrightDiv() Any {
    return func(dictDivisionRing Any) Any {
        var mul Any = Apply(Data_Semiring.Ꞌmul(), Apply(Apply(dictDivisionRing.(Dict)["Ring0"], Undefined).(Dict)["Semiring0"], Undefined))
        var recip1 Any = Apply(Ꞌrecip(), dictDivisionRing)
        return func(a Any) Any {
            return func(b Any) Any {
                return Apply(mul, a, Apply(recip1, b))
            }
        }
    }
}
func ꞋleftDiv() Any {
    return func(dictDivisionRing Any) Any {
        var mul Any = Apply(Data_Semiring.Ꞌmul(), Apply(Apply(dictDivisionRing.(Dict)["Ring0"], Undefined).(Dict)["Semiring0"], Undefined))
        var recip1 Any = Apply(Ꞌrecip(), dictDivisionRing)
        return func(a Any) Any {
            return func(b Any) Any {
                return Apply(mul, Apply(recip1, b), a)
            }
        }
    }
}

var ᛌdivisionringNumber_once Once
var ᛧdivisionringNumber Any

func ꞋdivisionringNumber() Any {
    ᛌdivisionringNumber_once.Do(func() {
        ᛧdivisionringNumber = Dict{"recip": func(x Any) Any {
            return Apply(Ꞌdiv(), 1.0, x)
        }, "Ring0": func(_ Any) Any {
            return Data_Ring.ꞋringNumber()
        },}
    })
return ᛧdivisionringNumber
}





