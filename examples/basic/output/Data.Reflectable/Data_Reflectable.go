// Code generated by psgo. DO NOT EDIT.

package Data_Reflectable

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Type.Proxy"
)

type _ = Any

func ꞋReifiable_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}
func ꞋReflectable_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}

var ᛌreifiableString_once Once
var ᛧreifiableString Any

func ꞋreifiableString() Any {
    ᛌreifiableString_once.Do(func() {
        ᛧreifiableString = Dict{}
    })
return ᛧreifiableString
}



var ᛌreifiableOrdering_once Once
var ᛧreifiableOrdering Any

func ꞋreifiableOrdering() Any {
    ᛌreifiableOrdering_once.Do(func() {
        ᛧreifiableOrdering = Dict{}
    })
return ᛧreifiableOrdering
}



var ᛌreifiableInt_once Once
var ᛧreifiableInt Any

func ꞋreifiableInt() Any {
    ᛌreifiableInt_once.Do(func() {
        ᛧreifiableInt = Dict{}
    })
return ᛧreifiableInt
}



var ᛌreifiableBoolean_once Once
var ᛧreifiableBoolean Any

func ꞋreifiableBoolean() Any {
    ᛌreifiableBoolean_once.Do(func() {
        ᛧreifiableBoolean = Dict{}
    })
return ᛧreifiableBoolean
}


func ꞋreifyType() Any {
    return func(_ Any) Any {
        return func(s Any) Any {
            return func(f Any) Any {
                return Apply(ꞋunsafeCoerce(), func(dictReflectable Any) Any {
                    return Apply(f, dictReflectable)
                }, Dict{"reflectType": func(v Any) Any {
                        return s
                    },}, Type_Proxy.ꞋProxy())
            }
        }
    }
}
func ꞋreflectType() Any {
    return func(dict Any) Any {
        return dict.(Dict)["reflectType"]
    }
}


// Foreign values

var foreign = Foreign("Data.Reflectable")

var ᛌunsafeCoerce_once Once
var ᛧunsafeCoerce Any

func ꞋunsafeCoerce() Any { 
    ᛌunsafeCoerce_once.Do(func() {
        ᛧunsafeCoerce = Get(foreign, "unsafeCoerce")
    })
    return ᛧunsafeCoerce
}


