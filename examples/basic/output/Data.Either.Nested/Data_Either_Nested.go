// Code generated by psgo. DO NOT EDIT.

package Data_Either_Nested

import . "github.com/purescript-native/go-runtime"

import (
	"project.localhost/purescript-native/output/Data.Either"
	"project.localhost/purescript-native/output/Data.Void"
)

type _ = Any

func Ꞌin9() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v)))))))))
    }
}
func Ꞌin8() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v))))))))
    }
}
func Ꞌin7() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v)))))))
    }
}
func Ꞌin6() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v))))))
    }
}
func Ꞌin5() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v)))))
    }
}
func Ꞌin4() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v))))
    }
}
func Ꞌin3() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v)))
    }
}
func Ꞌin2() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v))
    }
}
func Ꞌin10() Any {
    return func(v Any) Any {
        return Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋRight(), Apply(Data_Either.ꞋLeft(), v))))))))))
    }
}
func Ꞌin1() Any {
    return Data_Either.ꞋLeft()
}
func Ꞌeither9() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(f Any) Any {
                            return func(g Any) Any {
                                return func(h Any) Any {
                                    return func(i Any) Any {
                                        return func(y Any) Any {
                                            if Is(y, "Left") {
                                                return Apply(a, y.(Dict)["value0"])
                                            }
                                            if Is(y, "Right") {
                                                if Is(y.(Dict)["value0"], "Left") {
                                                    return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                                }
                                                if Is(y.(Dict)["value0"], "Right") {
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                                        return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                            return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                        }
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                            }
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                }
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                        return Apply(g, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                    }
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                            return Apply(h, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                        }
                                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                                return Apply(i, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                            }
                                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                                return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                            }
                                                                            panic("Failed pattern match at Data.Either.Nested (line 253, column 29 - line 255, column 40)")
                                                                        }
                                                                        panic("Failed pattern match at Data.Either.Nested (line 251, column 27 - line 255, column 40)")
                                                                    }
                                                                    panic("Failed pattern match at Data.Either.Nested (line 249, column 25 - line 255, column 40)")
                                                                }
                                                                panic("Failed pattern match at Data.Either.Nested (line 247, column 23 - line 255, column 40)")
                                                            }
                                                            panic("Failed pattern match at Data.Either.Nested (line 245, column 21 - line 255, column 40)")
                                                        }
                                                        panic("Failed pattern match at Data.Either.Nested (line 243, column 19 - line 255, column 40)")
                                                    }
                                                    panic("Failed pattern match at Data.Either.Nested (line 241, column 17 - line 255, column 40)")
                                                }
                                                panic("Failed pattern match at Data.Either.Nested (line 239, column 15 - line 255, column 40)")
                                            }
                                            panic("Failed pattern match at Data.Either.Nested (line 237, column 31 - line 255, column 40)")
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither8() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(f Any) Any {
                            return func(g Any) Any {
                                return func(h Any) Any {
                                    return func(y Any) Any {
                                        if Is(y, "Left") {
                                            return Apply(a, y.(Dict)["value0"])
                                        }
                                        if Is(y, "Right") {
                                            if Is(y.(Dict)["value0"], "Left") {
                                                return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                            }
                                            if Is(y.(Dict)["value0"], "Right") {
                                                if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                                    return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                }
                                                if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                        return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                            return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                        }
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                            }
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                    return Apply(g, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                }
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                        return Apply(h, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                    }
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                        return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                    }
                                                                    panic("Failed pattern match at Data.Either.Nested (line 232, column 27 - line 234, column 38)")
                                                                }
                                                                panic("Failed pattern match at Data.Either.Nested (line 230, column 25 - line 234, column 38)")
                                                            }
                                                            panic("Failed pattern match at Data.Either.Nested (line 228, column 23 - line 234, column 38)")
                                                        }
                                                        panic("Failed pattern match at Data.Either.Nested (line 226, column 21 - line 234, column 38)")
                                                    }
                                                    panic("Failed pattern match at Data.Either.Nested (line 224, column 19 - line 234, column 38)")
                                                }
                                                panic("Failed pattern match at Data.Either.Nested (line 222, column 17 - line 234, column 38)")
                                            }
                                            panic("Failed pattern match at Data.Either.Nested (line 220, column 15 - line 234, column 38)")
                                        }
                                        panic("Failed pattern match at Data.Either.Nested (line 218, column 29 - line 234, column 38)")
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither7() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(f Any) Any {
                            return func(g Any) Any {
                                return func(y Any) Any {
                                    if Is(y, "Left") {
                                        return Apply(a, y.(Dict)["value0"])
                                    }
                                    if Is(y, "Right") {
                                        if Is(y.(Dict)["value0"], "Left") {
                                            return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                        }
                                        if Is(y.(Dict)["value0"], "Right") {
                                            if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                                return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                            }
                                            if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                    return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                }
                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                        return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                            return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                        }
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                return Apply(g, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                            }
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                            }
                                                            panic("Failed pattern match at Data.Either.Nested (line 213, column 25 - line 215, column 36)")
                                                        }
                                                        panic("Failed pattern match at Data.Either.Nested (line 211, column 23 - line 215, column 36)")
                                                    }
                                                    panic("Failed pattern match at Data.Either.Nested (line 209, column 21 - line 215, column 36)")
                                                }
                                                panic("Failed pattern match at Data.Either.Nested (line 207, column 19 - line 215, column 36)")
                                            }
                                            panic("Failed pattern match at Data.Either.Nested (line 205, column 17 - line 215, column 36)")
                                        }
                                        panic("Failed pattern match at Data.Either.Nested (line 203, column 15 - line 215, column 36)")
                                    }
                                    panic("Failed pattern match at Data.Either.Nested (line 201, column 27 - line 215, column 36)")
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither6() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(f Any) Any {
                            return func(y Any) Any {
                                if Is(y, "Left") {
                                    return Apply(a, y.(Dict)["value0"])
                                }
                                if Is(y, "Right") {
                                    if Is(y.(Dict)["value0"], "Left") {
                                        return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                    }
                                    if Is(y.(Dict)["value0"], "Right") {
                                        if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                            return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                        }
                                        if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                            }
                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                    return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                }
                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                        return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                        return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    panic("Failed pattern match at Data.Either.Nested (line 196, column 23 - line 198, column 34)")
                                                }
                                                panic("Failed pattern match at Data.Either.Nested (line 194, column 21 - line 198, column 34)")
                                            }
                                            panic("Failed pattern match at Data.Either.Nested (line 192, column 19 - line 198, column 34)")
                                        }
                                        panic("Failed pattern match at Data.Either.Nested (line 190, column 17 - line 198, column 34)")
                                    }
                                    panic("Failed pattern match at Data.Either.Nested (line 188, column 15 - line 198, column 34)")
                                }
                                panic("Failed pattern match at Data.Either.Nested (line 186, column 25 - line 198, column 34)")
                            }
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither5() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(y Any) Any {
                            if Is(y, "Left") {
                                return Apply(a, y.(Dict)["value0"])
                            }
                            if Is(y, "Right") {
                                if Is(y.(Dict)["value0"], "Left") {
                                    return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                }
                                if Is(y.(Dict)["value0"], "Right") {
                                    if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                        return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                    }
                                    if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                            return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                        }
                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                            }
                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                            }
                                            panic("Failed pattern match at Data.Either.Nested (line 181, column 21 - line 183, column 32)")
                                        }
                                        panic("Failed pattern match at Data.Either.Nested (line 179, column 19 - line 183, column 32)")
                                    }
                                    panic("Failed pattern match at Data.Either.Nested (line 177, column 17 - line 183, column 32)")
                                }
                                panic("Failed pattern match at Data.Either.Nested (line 175, column 15 - line 183, column 32)")
                            }
                            panic("Failed pattern match at Data.Either.Nested (line 173, column 23 - line 183, column 32)")
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither4() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(y Any) Any {
                        if Is(y, "Left") {
                            return Apply(a, y.(Dict)["value0"])
                        }
                        if Is(y, "Right") {
                            if Is(y.(Dict)["value0"], "Left") {
                                return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                            }
                            if Is(y.(Dict)["value0"], "Right") {
                                if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                    return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                }
                                if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                        return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                    }
                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                        return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                    }
                                    panic("Failed pattern match at Data.Either.Nested (line 168, column 19 - line 170, column 30)")
                                }
                                panic("Failed pattern match at Data.Either.Nested (line 166, column 17 - line 170, column 30)")
                            }
                            panic("Failed pattern match at Data.Either.Nested (line 164, column 15 - line 170, column 30)")
                        }
                        panic("Failed pattern match at Data.Either.Nested (line 162, column 21 - line 170, column 30)")
                    }
                }
            }
        }
    }
}
func Ꞌeither3() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(y Any) Any {
                    if Is(y, "Left") {
                        return Apply(a, y.(Dict)["value0"])
                    }
                    if Is(y, "Right") {
                        if Is(y.(Dict)["value0"], "Left") {
                            return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                        }
                        if Is(y.(Dict)["value0"], "Right") {
                            if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                            }
                            if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                            }
                            panic("Failed pattern match at Data.Either.Nested (line 157, column 17 - line 159, column 28)")
                        }
                        panic("Failed pattern match at Data.Either.Nested (line 155, column 15 - line 159, column 28)")
                    }
                    panic("Failed pattern match at Data.Either.Nested (line 153, column 19 - line 159, column 28)")
                }
            }
        }
    }
}
func Ꞌeither2() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(y Any) Any {
                if Is(y, "Left") {
                    return Apply(a, y.(Dict)["value0"])
                }
                if Is(y, "Right") {
                    if Is(y.(Dict)["value0"], "Left") {
                        return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                    }
                    if Is(y.(Dict)["value0"], "Right") {
                        return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"])
                    }
                    panic("Failed pattern match at Data.Either.Nested (line 148, column 15 - line 150, column 26)")
                }
                panic("Failed pattern match at Data.Either.Nested (line 146, column 17 - line 150, column 26)")
            }
        }
    }
}
func Ꞌeither10() Any {
    return func(a Any) Any {
        return func(b Any) Any {
            return func(c Any) Any {
                return func(d Any) Any {
                    return func(e Any) Any {
                        return func(f Any) Any {
                            return func(g Any) Any {
                                return func(h Any) Any {
                                    return func(i Any) Any {
                                        return func(j Any) Any {
                                            return func(y Any) Any {
                                                if Is(y, "Left") {
                                                    return Apply(a, y.(Dict)["value0"])
                                                }
                                                if Is(y, "Right") {
                                                    if Is(y.(Dict)["value0"], "Left") {
                                                        return Apply(b, y.(Dict)["value0"].(Dict)["value0"])
                                                    }
                                                    if Is(y.(Dict)["value0"], "Right") {
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"], "Left") {
                                                            return Apply(c, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                        }
                                                        if Is(y.(Dict)["value0"].(Dict)["value0"], "Right") {
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                return Apply(d, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                            }
                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                    return Apply(e, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                }
                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                        return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                    }
                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                            return Apply(g, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                        }
                                                                        if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                                return Apply(h, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                            }
                                                                            if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                                    return Apply(i, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                                }
                                                                                if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left") {
                                                                                        return Apply(j, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                                    }
                                                                                    if Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") {
                                                                                        return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                                                                                    }
                                                                                    panic("Failed pattern match at Data.Either.Nested (line 276, column 31 - line 278, column 44)")
                                                                                }
                                                                                panic("Failed pattern match at Data.Either.Nested (line 274, column 29 - line 278, column 44)")
                                                                            }
                                                                            panic("Failed pattern match at Data.Either.Nested (line 272, column 27 - line 278, column 44)")
                                                                        }
                                                                        panic("Failed pattern match at Data.Either.Nested (line 270, column 25 - line 278, column 44)")
                                                                    }
                                                                    panic("Failed pattern match at Data.Either.Nested (line 268, column 23 - line 278, column 44)")
                                                                }
                                                                panic("Failed pattern match at Data.Either.Nested (line 266, column 21 - line 278, column 44)")
                                                            }
                                                            panic("Failed pattern match at Data.Either.Nested (line 264, column 19 - line 278, column 44)")
                                                        }
                                                        panic("Failed pattern match at Data.Either.Nested (line 262, column 17 - line 278, column 44)")
                                                    }
                                                    panic("Failed pattern match at Data.Either.Nested (line 260, column 15 - line 278, column 44)")
                                                }
                                                panic("Failed pattern match at Data.Either.Nested (line 258, column 34 - line 278, column 44)")
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
func Ꞌeither1() Any {
    return func(y Any) Any {
        if Is(y, "Left") {
            return y.(Dict)["value0"]
        }
        if Is(y, "Right") {
            return Apply(Data_Void.Ꞌabsurd(), y.(Dict)["value0"])
        }
        panic("Failed pattern match at Data.Either.Nested (line 141, column 13 - line 143, column 24)")
    }
}
func Ꞌat9() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left")))))))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat8() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left"))))))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat7() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left")))))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat6() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left"))))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat5() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left")))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat4() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left"))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat3() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"], "Left")) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat2() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && Is(y.(Dict)["value0"], "Left") {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat10() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Right") && (Is(y.(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && (Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Right") && Is(y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"], "Left"))))))))) {
                    return Apply(f, y.(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"].(Dict)["value0"])
                }
                return b
            }
        }
    }
}
func Ꞌat1() Any {
    return func(b Any) Any {
        return func(f Any) Any {
            return func(y Any) Any {
                if Is(y, "Left") {
                    return Apply(f, y.(Dict)["value0"])
                }
                return b
            }
        }
    }
}



