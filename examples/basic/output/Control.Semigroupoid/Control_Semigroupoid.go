// Code generated by psgo. DO NOT EDIT.

package Control_Semigroupoid

import . "github.com/purescript-native/go-runtime"

import (
)

type _ = Any

func ꞋSemigroupoid_ṩDict() Any {
    return func(x Any) Any {
        return x
    }
}

var ᛌsemigroupoidFn_once Once
var ᛧsemigroupoidFn Any

func ꞋsemigroupoidFn() Any {
    ᛌsemigroupoidFn_once.Do(func() {
        ᛧsemigroupoidFn = Dict{"compose": func(f Any) Any {
            return func(g Any) Any {
                return func(x Any) Any {
                    return Apply(f, Apply(g, x))
                }
            }
        },}
    })
return ᛧsemigroupoidFn
}


func Ꞌcompose() Any {
    return func(dict Any) Any {
        return dict.(Dict)["compose"]
    }
}
func ꞋcomposeFlipped() Any {
    return func(dictSemigroupoid Any) Any {
        var compose1 Any = Apply(Ꞌcompose(), dictSemigroupoid)
        return func(f Any) Any {
            return func(g Any) Any {
                return Apply(compose1, g, f)
            }
        }
    }
}



